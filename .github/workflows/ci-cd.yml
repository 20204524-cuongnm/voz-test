name: CI/CD Project-20231
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:          
      - name: Code Checkout
        uses: actions/checkout@master
      # - name: Create .env file
      #   uses: SpicyPizza/create-envfile@v2.0
      #   with:
      #     envkey_PORT: 3003
      #     envkey_MONGODB_URL_DEV: ${{ secrets.MONGODB_URL_DEV }}
      #     envkey_MONGODB_URL_PRODUCT: ${{ secrets.MONGODB_URL_PRODUCT }}
      #     envkey_GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      #     envkey_GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      #     envkey_CALLBACK_URL: http://localhost:3003/auth/google/callback
      #     envkey_SECRET_KEY: SECRET_KEY
      #     envkey_OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      #     envkey_GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      #     directory: backend
          
      # - name: Set up Cloud SDK
      #   uses: "google-github-actions/setup-gcloud@v1"
      #   with:
      #     project_id: ${{ secrets.PROJECT_ID }}
      #     service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      #     export_default_credentials: true

      # - name: Use gcloud CLI
      #   run: gcloud info
  
      # - name: Setup Node.js environment
      #   uses: actions/setup-node@v4.0.1
      #   with:
      #     node-version: "20.x"

      # - name: Install dependencies for backend
      #   working-directory: backend
      #   run: npm install

      # - name: Install dependencies for frontend
      #   working-directory: frontend
      #   run: npm install
      
      # - name: Docker auth          
      #   run: |
      #     gcloud auth configure-docker asia-southeast2-docker.pkg.dev --quiet

      # - name: Build Docker image for backend
      #   run: docker build -t asia-southeast2-docker.pkg.dev/${{ secrets.PROJECT_ID }}/voz20231/backend:latest . 
      #   working-directory: backend
      
      # - name: Build Docker image for frontend
      #   run: docker build -t asia-southeast2-docker.pkg.dev/${{ secrets.PROJECT_ID }}/voz20231/frontend:latest . 
      #   working-directory: frontend

      # - name: Push Docker image for backend to Google Artifact Registry
      #   run: docker push asia-southeast2-docker.pkg.dev/${{ secrets.PROJECT_ID }}/voz20231/backend:latest
      - name: create credentials
        working-directory: backend
        run: |-
          echo > credentials.txt && echo "${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}" >> credentials.txt && cat credentials.txt
      # - name: show pwd
      #   working-directory: backend
      #   run: |-
      #     pwd && ls && cat credentials.txt
      - name: gcloud auth login with credentials
        working-directory: backend
        run : gcloud auth login --cred-file=credentials.txt
      # - name: Push Docker image for frontend to Google Artifact Registry
      #   run: docker push asia-southeast2-docker.pkg.dev/${{ secrets.PROJECT_ID }}/voz20231/frontend:latest

      # - name: auth google github actions
      #   uses: google-github-actions/auth@v2
      #   with:
      #     workload_identity_provider: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
      #     service_account: 'cuong2905say@gmail.com'

      # - name: create Service declaration
      #   run: |-
      #     export CONTAINER_IMAGE = "asia-southeast2-docker.pkg.dev/${{secrets.PROJECT_ID}}/voz20231/backend:latest"
      #     export SERVICE_NAME = backend
      #     export PROJECT_ID = ${{secrets.PROJECT_ID}}

      # - name: deploy backend
      #   run : |- 
      #     gcloud config set account cuong2905say@gmail.com &&
      #     gcloud run deploy cloudrun-backend-service --image asia-southeast2-docker.pkg.dev/${{secrets.PROJECT_ID}}/voz20231/backend:latest --region asia-southeast2 --allow-unauthenticated

      # - name: Deploy frontend to Google Cloud Run
      #   uses: google-github-actions/deploy-cloudrun@v1
      #   with:
      #     service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      #     image: asia-southeast2-docker.pkg.dev/${{ secrets.PROJECT_ID }}/voz20231/frontend:latest
      #     service: cloudrun-frontend-service
      #     region: asia-southeast2
      #     project_id: ${{ secrets.PROJECT_ID }}
      #     args: --allow-unauthenticated
