name: ci-cd Node.js app
on:
  push:
    branches: [main, feature/threads-replies-api]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  workflow_dispatch:
     
jobs:
  sonarqube:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: c2ff223c1f0b043f34b8f815ea7f45604120635c

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.1
        with:
          node-version: "20.x"

      - name: Install dependencies for backend
        working-directory: backend
        run: npm install

      - name: Install dependencies for frontend
        working-directory: frontend
        run: npm install

      # - name: Run test
      #   working-directory: backend
      #   run: npm test 

      # - name: Build Docker image
      #   run: docker build -t tienanhbghd/project-20231:be .
      # - name: Login to Docker Hub
      #   run: docker login -u mjnhmnmm -p phuong2607
      # - name: Push Docker image
      #   run: docker push tienanhbghd/project-20231:be

  # deploy:
  #   env:
  #     PROJECT_ID:
  #     SERVICE:
  #     REGION:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@master

  #     - name: Use Node.js
  #       uses: actions/setup-node@master
  #       with:
  #         node-version: "20.x"

  #     - name: Google Auth
  #       id: auth
  #       uses: 'google-github-actions/auth@v0'
  #       with:
  #         workload_identity_provider: 
  #         service_account: 

  #     # - name: Deploy to Cloud
  #     #   uses: 

  #     - name: Login to Docker Hub
  #       run: docker login -u mjnhmnmm -p phuong2607
  #     - name: Pull Docker image
  #       run: docker pull tienanhbghd/project-20231:be
  #     - name: Start MongoDB container
  #       run: docker run -d --name mongodb mongo
  #     - name: Start Express.js container
  #       run: docker run -d -p 3003:3003 --name express-app --link mongodb tienanhbghd/project-20231:be